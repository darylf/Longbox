name: "Test: API ruby code"

on:
  pull_request:
    branches: [main, develop]
    paths:
      - "api/**"
  push:
    branches: [main, develop]
    paths:
      - "api/**"
  workflow_dispatch:
    branches: [main, develop]
    paths:
      - "api/**"

defaults:
  run:
    working-directory: api

env:
  RUBY_VERSION: 3.0.2
  DATABASE_URL: localhost
  DATABASE_USERNAME: postgres
  DATABASE_PASSWORD: ""
  DATABASE_NAME: longbox

jobs:
  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: "Rubocop: install"
        run: |
          gem install -N rubocop rubocop-rails rubocop-rspec rubocop-performance

      - name: "Rubocop: run"
        run: |
          rubocop --format github

  brakeman:
    name: Brakeman
    runs-on: ubuntu-latest
    steps:
      - name: "Setup: Checkout"
        uses: actions/checkout@v3

      - name: "Setup: Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: "Brakeman: install"
        run: |
          gem install brakeman

      - name: "Brakeman: run"
        continue-on-error: true
        run: |
          brakeman -f sarif -o output.sarif.json .

      - name: "Cleanup: Upload SARIF"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: api/output.sarif.json

  rspec-test:
    name: RSpec
    needs: [rubocop, brakeman]
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:11.6
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: "Setup: Checkout"
        uses: actions/checkout@v3

      - name: "Setup: Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: "Setup: Install postgres client"
        run: |
          sudo apt-get install libpq-dev

      - name: "Setup: Install gem dependencies"
        run: |
          gem install bundler
          bundler install

      - name: "Setup: Create database"
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test

      - name: "Rspec: Run tests"
        env:
          RAILS_ENV: test
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_USERNAME: ${{ env.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ env.DATABASE_NAME }}
        run: |
          bundler exec rake
